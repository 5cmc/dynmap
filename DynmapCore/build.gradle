description = "DynmapCore"

apply plugin: 'eclipse'

eclipse {
    project {
        name = "Dynmap(DynmapCore)"
    }
}

dependencies {
    implementation project(path: ':DynmapCoreAPI', configuration: 'shadow')
    implementation 'javax.servlet:javax.servlet-api:3.1'
    implementation 'org.eclipse.jetty:jetty-server:9.4.26.v20200117'
    implementation 'org.eclipse.jetty:jetty-servlet:9.4.26.v20200117'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    implementation 'org.yaml:snakeyaml:1.23'	// DON'T UPDATE - NEWER ONE TRIPS ON WINDOWS ENCODED FILES
    implementation 'com.googlecode.owasp-java-html-sanitizer:owasp-java-html-sanitizer:20180219.1'
    implementation 'org.postgresql:postgresql:42.2.18'
    implementation 'software.amazon.awssdk:s3:2.17.132'
    implementation 'software.amazon.awssdk:aws-core:2.17.132'
    implementation 'software.amazon.awssdk:sdk-core:2.17.132'
    implementation 'software.amazon.awssdk:utils:2.17.132'
    implementation 'software.amazon.awssdk:http-client-spi:2.17.132'
    implementation 'software.amazon.awssdk:profiles:2.17.132'
    implementation 'software.amazon.awssdk:regions:2.17.132'
    implementation 'software.amazon.awssdk:auth:2.17.132'
    implementation 'software.amazon.awssdk:metrics-spi:2.17.132'
    implementation 'software.amazon.awssdk:aws-xml-protocol:2.17.132'
    implementation 'software.amazon.awssdk:protocol-core:2.17.132'
}

processResources {
    // replace stuff in mcmod.info, nothing else
    filesMatching([
        'core.yml',
        'lightings.txt',
        'perspectives.txt',
        'shaders.txt',
        'extracted/web/version.js',
        'extracted/web/index.html',
        'extracted/web/login.html',
    ]) {
        // replace version and mcversion
        expand(
                buildnumber: project.parent.ext.globals.buildNumber,
                version: project.version
        )
    }
}

jar {
   classifier = 'unshaded'
}

shadowJar {
    dependencies {
        include(dependency('com.googlecode.json-simple:json-simple:'))
        include(dependency('org.yaml:snakeyaml:'))
        include(dependency('com.googlecode.owasp-java-html-sanitizer:owasp-java-html-sanitizer:'))
        include(dependency('javax.servlet::'))
        include(dependency('org.eclipse.jetty::'))
        include(dependency('org.eclipse.jetty.orbit:javax.servlet:'))
        include(dependency('org.postgresql:postgresql:'))
    	include(dependency('software.amazon.awssdk:s3:'))      
    	include(dependency('software.amazon.awssdk:aws-core:'))      
    	include(dependency('software.amazon.awssdk:sdk-core:'))      
    	include(dependency('software.amazon.awssdk:utils:'))
    	include(dependency('software.amazon.awssdk:http-client-spi:'))      
    	include(dependency('software.amazon.awssdk:profiles:'))      
    	include(dependency('software.amazon.awssdk:regions:'))      
    	include(dependency('software.amazon.awssdk:auth:'))      
    	include(dependency('software.amazon.awssdk:metrics-spi:'))      
    	include(dependency('software.amazon.awssdk:aws-xml-protocol:'))      
    	include(dependency('software.amazon.awssdk:protocol-core:'))      
        include(dependency(':DynmapCoreAPI'))
        exclude("META-INF/maven/**")
        exclude("META-INF/services/**")
	}
	relocate('org.json.simple', 'org.dynmap.json.simple')
	relocate('org.yaml.snakeyaml', 'org.dynmap.snakeyaml')
	relocate('org.eclipse.jetty', 'org.dynmap.jetty')
	relocate('org.owasp.html', 'org.dynmap.org.owasp.html')
	relocate('javax.servlet', 'org.dynmap.javax.servlet' )
	relocate('org.postgresql', 'org.dynmap.org.postgresql')
	relocate('software.amazon.awssdk', 'org.dynmap.software.amazon.awssdk')        
    destinationDir = file '../target'
    classifier = ''
}

artifacts {
    archives shadowJar
}
