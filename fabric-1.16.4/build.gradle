buildscript {
    repositories {
        maven { url = 'https://maven.fabricmc.net/' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.fabricmc', name: 'fabric-loom', version: '0.6-SNAPSHOT'
    }
}
apply plugin: 'fabric-loom'

archivesBaseName = project.archives_base_name
version = parent.version
group = parent.group

configurations {
    shadow
    implementation.extendsFrom(shadow)
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    compileOnly group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'

    shadow project(path: ':DynmapCore', configuration: 'shadow')

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.
}

processResources {
    filesMatching('fabric.mod.json') {
        expand "version": project.version
    }
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from "LICENSE"
    from {
        configurations.shadow.collect { it.toString().contains("guava") ? null : it.isDirectory() ? it : zipTree(it) }
    }
}

remapJar {
    archiveName = "${archivesBaseName}-${version}-fabric-${project.minecraft_version}.jar"
    destinationDir = file '../target'
}

remapJar.doLast {
    task ->
        ant.checksum file: task.archivePath
}
